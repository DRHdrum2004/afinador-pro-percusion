{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/mi_proyecto/src/components/TuningResult.js\";\nimport React from 'react';\nimport drumData from '../mock/drumData';\nimport { getText } from '../utils/languages';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TuningResult = ({\n  drumType,\n  detectedFreq,\n  language\n}) => {\n  if (!drumType || !detectedFreq) return null;\n  const drum = drumData[drumType];\n  const [minFreq, maxFreq] = drum.range.split('-').map(Number);\n  const isInTune = detectedFreq >= minFreq && detectedFreq <= maxFreq;\n  const difference = detectedFreq - drum.targetFreq;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-md mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium text-gray-900 mb-2\",\n      children: getText('tuningResult.result', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [getText('tuningResult.drum', language), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" \", drum.brand, \" \", drum.model]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [getText('tuningResult.targetFreq', language), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" \", drum.targetFreq, \" \", getText('tuningResult.hz', language)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [getText('tuningResult.acceptableRange', language), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" \", drum.range, \" \", getText('tuningResult.hz', language)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: [getText('tuningResult.source', language), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" \", drum.source]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-4 p-3 rounded-md ${isInTune ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n        children: isInTune ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: [\"\\u2705 \", getText('tuningResult.correctlyTuned', language)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: [\"\\u274C \", getText('tuningResult.needsAdjustment', language)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1\",\n            children: difference > 0 ? `${getText('tuningResult.loosen', language)} ${Math.abs(difference)} ${getText('tuningResult.hz', language)}` : `${getText('tuningResult.tighten', language)} ${Math.abs(difference)} ${getText('tuningResult.hz', language)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = TuningResult;\nexport default TuningResult;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"TuningResult\");","map":{"version":3,"names":["React","drumData","getText","jsxDEV","_jsxDEV","Fragment","_Fragment","TuningResult","drumType","detectedFreq","language","drum","minFreq","maxFreq","range","split","map","Number","isInTune","difference","targetFreq","className","children","fileName","_jsxFileName","lineNumber","columnNumber","brand","model","source","Math","abs","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/mi_proyecto/src/components/TuningResult.js"],"sourcesContent":["import React from 'react';\nimport drumData from '../mock/drumData';\nimport { getText } from '../utils/languages';\n\nconst TuningResult = ({ drumType, detectedFreq, language }) => {\n  if (!drumType || !detectedFreq) return null;\n\n  const drum = drumData[drumType];\n  const [minFreq, maxFreq] = drum.range.split('-').map(Number);\n  const isInTune = detectedFreq >= minFreq && detectedFreq <= maxFreq;\n  const difference = detectedFreq - drum.targetFreq;\n\n  return (\n    <div className=\"p-4 bg-white rounded-lg shadow-md mt-4\">\n      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n        {getText('tuningResult.result', language)}\n      </h3>\n      <div className=\"space-y-2\">\n        <p className=\"text-gray-700\">\n          <span className=\"font-medium\">{getText('tuningResult.drum', language)}:</span> {drum.brand} {drum.model}\n        </p>\n        <p className=\"text-gray-700\">\n          <span className=\"font-medium\">{getText('tuningResult.targetFreq', language)}:</span> {drum.targetFreq} {getText('tuningResult.hz', language)}\n        </p>\n        <p className=\"text-gray-700\">\n          <span className=\"font-medium\">{getText('tuningResult.acceptableRange', language)}:</span> {drum.range} {getText('tuningResult.hz', language)}\n        </p>\n        <p className=\"text-gray-700\">\n          <span className=\"font-medium\">{getText('tuningResult.source', language)}:</span> {drum.source}\n        </p>\n        <div className={`mt-4 p-3 rounded-md ${isInTune ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n          {isInTune ? (\n            <p className=\"font-bold\">✅ {getText('tuningResult.correctlyTuned', language)}</p>\n          ) : (\n            <>\n              <p className=\"font-bold\">❌ {getText('tuningResult.needsAdjustment', language)}</p>\n              <p className=\"mt-1\">\n                {difference > 0 \n                  ? `${getText('tuningResult.loosen', language)} ${Math.abs(difference)} ${getText('tuningResult.hz', language)}`\n                  : `${getText('tuningResult.tighten', language)} ${Math.abs(difference)} ${getText('tuningResult.hz', language)}`}\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TuningResult;\n\n// DONE"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}