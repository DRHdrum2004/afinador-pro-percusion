{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/mi_proyecto/src/components/TuningGuide.js\";\nimport React from 'react';\nimport { getText } from '../utils/languages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TuningGuide = ({\n  drumType,\n  language,\n  theme\n}) => {\n  const getInstructions = () => {\n    var _guides$drumType;\n    const guides = {\n      snare: {\n        es: [\"1. Afina primero el parche batidor (superior)\", \"2. Ajusta el parche resonante (inferior) 1-2 tonos más alto\", \"3. Asegúrate que todos los tornos tengan la misma tensión\"],\n        en: [\"1. First tune the batter head (top)\", \"2. Adjust resonant head (bottom) 1-2 tones higher\", \"3. Ensure all lugs have equal tension\"]\n      },\n      kick: {\n        es: [\"1. Afina el parche batidor para el ataque\", \"2. El parche resonante controla el sustain\", \"3. Usa almohadillas internas para reducir overtones\"],\n        en: [\"1. Tune the batter head for attack\", \"2. Resonant head controls sustain\", \"3. Use internal dampening for overtones\"]\n      },\n      tom1: {\n        es: [\"1. Afina ambos parches al mismo tono\", \"2. Para más sustain, afloja ligeramente el resonante\", \"3. Ajusta en cruz (tornos opuestos)\"],\n        en: [\"1. Tune both heads to the same pitch\", \"2. For more sustain, slightly loosen resonant\", \"3. Tune in criss-cross pattern\"]\n      },\n      bongo_hembra: {\n        es: [\"1. Afina a un tono agudo y brillante\", \"2. El macho debe estar una cuarta abajo\", \"3. Usa tensión uniforme en todos los lados\"],\n        en: [\"1. Tune to a bright high pitch\", \"2. Macho should be a fourth lower\", \"3. Use even tension on all sides\"]\n      },\n      default: {\n        es: [\"1. Comienza con todos los tornos semisueltos\", \"2. Aprieta gradualmente en forma de estrella\", \"3. Usa pequeñas variaciones para el tono deseado\"],\n        en: [\"1. Start with all lugs finger tight\", \"2. Tighten gradually in star pattern\", \"3. Use small increments for desired pitch\"]\n      }\n    };\n    return ((_guides$drumType = guides[drumType]) === null || _guides$drumType === void 0 ? void 0 : _guides$drumType[language]) || guides['default'][language];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-4 rounded-lg shadow-md mt-4 transition-all ${theme === 'dark' ? 'bg-gray-800 border border-gray-700' : 'bg-blue-100 border border-blue-300'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: `text-lg font-medium mb-2 ${theme === 'dark' ? 'text-teal-300' : 'text-blue-800'}`,\n      children: getText('tuningGuide', language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `list-decimal pl-5 space-y-1 ${theme === 'dark' ? 'text-blue-300' : 'text-blue-900'}`,\n      children: getInstructions().map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: step\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = TuningGuide;\nexport default TuningGuide;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"TuningGuide\");","map":{"version":3,"names":["React","getText","jsxDEV","_jsxDEV","TuningGuide","drumType","language","theme","getInstructions","_guides$drumType","guides","snare","es","en","kick","tom1","bongo_hembra","default","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","step","index","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/mi_proyecto/src/components/TuningGuide.js"],"sourcesContent":["import React from 'react';\nimport { getText } from '../utils/languages';\n\nconst TuningGuide = ({ drumType, language, theme }) => {\n  const getInstructions = () => {\n    const guides = {\n      snare: {\n        es: [\n          \"1. Afina primero el parche batidor (superior)\",\n          \"2. Ajusta el parche resonante (inferior) 1-2 tonos más alto\",\n          \"3. Asegúrate que todos los tornos tengan la misma tensión\"\n        ],\n        en: [\n          \"1. First tune the batter head (top)\",\n          \"2. Adjust resonant head (bottom) 1-2 tones higher\",\n          \"3. Ensure all lugs have equal tension\"\n        ]\n      },\n      kick: {\n        es: [\n          \"1. Afina el parche batidor para el ataque\",\n          \"2. El parche resonante controla el sustain\",\n          \"3. Usa almohadillas internas para reducir overtones\"\n        ],\n        en: [\n          \"1. Tune the batter head for attack\",\n          \"2. Resonant head controls sustain\",\n          \"3. Use internal dampening for overtones\"\n        ]\n      },\n      tom1: {\n        es: [\n          \"1. Afina ambos parches al mismo tono\",\n          \"2. Para más sustain, afloja ligeramente el resonante\",\n          \"3. Ajusta en cruz (tornos opuestos)\"\n        ],\n        en: [\n          \"1. Tune both heads to the same pitch\",\n          \"2. For more sustain, slightly loosen resonant\",\n          \"3. Tune in criss-cross pattern\"\n        ]\n      },\n      bongo_hembra: {\n        es: [\n          \"1. Afina a un tono agudo y brillante\",\n          \"2. El macho debe estar una cuarta abajo\",\n          \"3. Usa tensión uniforme en todos los lados\"\n        ],\n        en: [\n          \"1. Tune to a bright high pitch\",\n          \"2. Macho should be a fourth lower\",\n          \"3. Use even tension on all sides\"\n        ]\n      },\n      default: {\n        es: [\n          \"1. Comienza con todos los tornos semisueltos\",\n          \"2. Aprieta gradualmente en forma de estrella\",\n          \"3. Usa pequeñas variaciones para el tono deseado\"\n        ],\n        en: [\n          \"1. Start with all lugs finger tight\",\n          \"2. Tighten gradually in star pattern\",\n          \"3. Use small increments for desired pitch\"\n        ]\n      }\n    };\n\n    return guides[drumType]?.[language] || guides['default'][language];\n  };\n\n  return (\n    <div className={`p-4 rounded-lg shadow-md mt-4 transition-all ${\n      theme === 'dark' ? 'bg-gray-800 border border-gray-700' : 'bg-blue-100 border border-blue-300'\n    }`}>\n      <h3 className={`text-lg font-medium mb-2 ${\n        theme === 'dark' ? 'text-teal-300' : 'text-blue-800'\n      }`}>\n        {getText('tuningGuide', language)}\n      </h3>\n      <ul className={`list-decimal pl-5 space-y-1 ${\n        theme === 'dark' ? 'text-blue-300' : 'text-blue-900'\n      }`}>\n        {getInstructions().map((step, index) => (\n          <li key={index}>{step}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TuningGuide;\n\n// DONE"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EACrD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAAA,IAAAC,gBAAA;IAC5B,MAAMC,MAAM,GAAG;MACbC,KAAK,EAAE;QACLC,EAAE,EAAE,CACF,+CAA+C,EAC/C,6DAA6D,EAC7D,2DAA2D,CAC5D;QACDC,EAAE,EAAE,CACF,qCAAqC,EACrC,mDAAmD,EACnD,uCAAuC;MAE3C,CAAC;MACDC,IAAI,EAAE;QACJF,EAAE,EAAE,CACF,2CAA2C,EAC3C,4CAA4C,EAC5C,qDAAqD,CACtD;QACDC,EAAE,EAAE,CACF,oCAAoC,EACpC,mCAAmC,EACnC,yCAAyC;MAE7C,CAAC;MACDE,IAAI,EAAE;QACJH,EAAE,EAAE,CACF,sCAAsC,EACtC,sDAAsD,EACtD,qCAAqC,CACtC;QACDC,EAAE,EAAE,CACF,sCAAsC,EACtC,+CAA+C,EAC/C,gCAAgC;MAEpC,CAAC;MACDG,YAAY,EAAE;QACZJ,EAAE,EAAE,CACF,sCAAsC,EACtC,yCAAyC,EACzC,4CAA4C,CAC7C;QACDC,EAAE,EAAE,CACF,gCAAgC,EAChC,mCAAmC,EACnC,kCAAkC;MAEtC,CAAC;MACDI,OAAO,EAAE;QACPL,EAAE,EAAE,CACF,8CAA8C,EAC9C,8CAA8C,EAC9C,kDAAkD,CACnD;QACDC,EAAE,EAAE,CACF,qCAAqC,EACrC,sCAAsC,EACtC,2CAA2C;MAE/C;IACF,CAAC;IAED,OAAO,EAAAJ,gBAAA,GAAAC,MAAM,CAACL,QAAQ,CAAC,cAAAI,gBAAA,uBAAhBA,gBAAA,CAAmBH,QAAQ,CAAC,KAAII,MAAM,CAAC,SAAS,CAAC,CAACJ,QAAQ,CAAC;EACpE,CAAC;EAED,oBACEH,OAAA;IAAKe,SAAS,EAAE,gDACdX,KAAK,KAAK,MAAM,GAAG,oCAAoC,GAAG,oCAAoC,EAC7F;IAAAY,QAAA,gBACDhB,OAAA;MAAIe,SAAS,EAAE,4BACbX,KAAK,KAAK,MAAM,GAAG,eAAe,GAAG,eAAe,EACnD;MAAAY,QAAA,EACAlB,OAAO,CAAC,aAAa,EAAEK,QAAQ;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACLpB,OAAA;MAAIe,SAAS,EAAE,+BACbX,KAAK,KAAK,MAAM,GAAG,eAAe,GAAG,eAAe,EACnD;MAAAY,QAAA,EACAX,eAAe,CAAC,CAAC,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjCvB,OAAA;QAAAgB,QAAA,EAAiBM;MAAI,GAAZC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACI,EAAA,GAtFIvB,WAAW;AAwFjB,eAAeA,WAAW;;AAE1B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}