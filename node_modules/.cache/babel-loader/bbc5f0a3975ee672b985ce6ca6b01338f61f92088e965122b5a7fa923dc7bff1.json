{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/mi_proyecto/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DrumSelector from './components/DrumSelector';\nimport RealFrequencyDetector from './components/RealFrequencyDetector';\nimport TuningResult from './components/TuningResult';\nimport TuningGuide from './components/TuningGuide';\nimport RealTimeGraph from './components/RealTimeGraph';\nimport SettingsPanel from './components/SettingsPanel';\nimport Credits from './components/Credits';\nimport ThemeIcon from './components/ThemeIcon';\nimport { getText } from './utils/languages';\n\n// REGISTRACIÓN DEL SERVICE WORKER\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(reg => console.log('✅ Service Worker registrado:', reg)).catch(err => console.error('❌ Error registrando el Service Worker:', err));\n  });\n}\nconst App = () => {\n  _s();\n  const [selectedDrum, setSelectedDrum] = useState('snare');\n  const [detectedFreq, setDetectedFreq] = useState(null);\n  const [frequencyHistory, setFrequencyHistory] = useState([]);\n  const [language, setLanguage] = useState(localStorage.getItem('language') || 'es');\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'dark');\n  useEffect(() => {\n    localStorage.setItem('language', language);\n    localStorage.setItem('theme', theme);\n    document.documentElement.classList.toggle('dark', theme === 'dark');\n  }, [language, theme]);\n  useEffect(() => {\n    console.log('🎵 Aplicación inicializada con Theme:', theme, 'y Language:', language);\n  }, []);\n  const handleDrumSelect = drum => {\n    setSelectedDrum(drum);\n    setDetectedFreq(null);\n    setFrequencyHistory([]);\n  };\n  const handleFrequencyDetected = freq => {\n    setDetectedFreq(freq);\n    setFrequencyHistory(prev => [...prev, freq]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen p-4 md:p-8 transition-colors duration-300 ${theme === 'dark' ? 'bg-gray-900 text-gray-100' : 'bg-gradient-to-br from-blue-50 to-purple-50 text-gray-900'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center mb-6 gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(ThemeIcon, {\n          className: \"h-10 w-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `text-3xl font-bold text-transparent bg-clip-text ${theme === 'dark' ? 'bg-gradient-to-r from-teal-400 to-blue-500' : 'bg-gradient-to-r from-purple-500 to-pink-600'}`,\n          children: getText('appTitle', language)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n        language: language,\n        setLanguage: setLanguage,\n        theme: theme,\n        setTheme: setTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrumSelector, {\n        onDrumSelect: handleDrumSelect,\n        language: language,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TuningGuide, {\n        drumType: selectedDrum,\n        language: language,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RealFrequencyDetector, {\n        drumType: selectedDrum,\n        onFrequencyDetected: handleFrequencyDetected,\n        language: language,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), detectedFreq && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TuningResult, {\n          drumType: selectedDrum,\n          detectedFreq: detectedFreq,\n          language: language,\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RealTimeGraph, {\n          frequencies: frequencyHistory,\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Credits, {\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J73C3kYVMp+aFFoSR1nnBoTJobE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DrumSelector","RealFrequencyDetector","TuningResult","TuningGuide","RealTimeGraph","SettingsPanel","Credits","ThemeIcon","getText","jsxDEV","_jsxDEV","Fragment","_Fragment","navigator","window","addEventListener","serviceWorker","register","then","reg","console","log","catch","err","error","App","_s","selectedDrum","setSelectedDrum","detectedFreq","setDetectedFreq","frequencyHistory","setFrequencyHistory","language","setLanguage","localStorage","getItem","theme","setTheme","setItem","document","documentElement","classList","toggle","handleDrumSelect","drum","handleFrequencyDetected","freq","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrumSelect","drumType","onFrequencyDetected","frequencies","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/mi_proyecto/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DrumSelector from './components/DrumSelector';\nimport RealFrequencyDetector from './components/RealFrequencyDetector';\nimport TuningResult from './components/TuningResult';\nimport TuningGuide from './components/TuningGuide';\nimport RealTimeGraph from './components/RealTimeGraph';\nimport SettingsPanel from './components/SettingsPanel';\nimport Credits from './components/Credits';\nimport ThemeIcon from './components/ThemeIcon';\nimport { getText } from './utils/languages';\n\n// REGISTRACIÓN DEL SERVICE WORKER\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/service-worker.js')\n            .then(reg => console.log('✅ Service Worker registrado:', reg))\n            .catch(err => console.error('❌ Error registrando el Service Worker:', err));\n    });\n}\n\nconst App = () => {\n  const [selectedDrum, setSelectedDrum] = useState('snare');\n  const [detectedFreq, setDetectedFreq] = useState(null);\n  const [frequencyHistory, setFrequencyHistory] = useState([]);\n  const [language, setLanguage] = useState(\n    localStorage.getItem('language') || 'es'\n  );\n  const [theme, setTheme] = useState(\n    localStorage.getItem('theme') || 'dark'\n  );\n\n  useEffect(() => {\n    localStorage.setItem('language', language);\n    localStorage.setItem('theme', theme);\n    document.documentElement.classList.toggle('dark', theme === 'dark');\n  }, [language, theme]);\n\n  useEffect(() => {\n    console.log('🎵 Aplicación inicializada con Theme:', theme, 'y Language:', language);\n  }, []);\n\n  const handleDrumSelect = (drum) => {\n    setSelectedDrum(drum);\n    setDetectedFreq(null);\n    setFrequencyHistory([]);\n  };\n\n  const handleFrequencyDetected = (freq) => {\n    setDetectedFreq(freq);\n    setFrequencyHistory(prev => [...prev, freq]);\n  };\n\n  return (\n    <div className={`min-h-screen p-4 md:p-8 transition-colors duration-300 ${\n      theme === 'dark' ? 'bg-gray-900 text-gray-100' : 'bg-gradient-to-br from-blue-50 to-purple-50 text-gray-900'\n    }`}>\n      <div className=\"max-w-md mx-auto\">\n        <div className=\"flex items-center justify-center mb-6 gap-3\">\n          <ThemeIcon className=\"h-10 w-10\"/>\n          <h1 className={`text-3xl font-bold text-transparent bg-clip-text ${\n            theme === 'dark' ? 'bg-gradient-to-r from-teal-400 to-blue-500' : 'bg-gradient-to-r from-purple-500 to-pink-600'\n          }`}>\n            {getText('appTitle', language)}\n          </h1>\n        </div>\n\n        <SettingsPanel\n          language={language}\n          setLanguage={setLanguage}\n          theme={theme}\n          setTheme={setTheme}\n        />\n\n        <DrumSelector onDrumSelect={handleDrumSelect} language={language} theme={theme} />\n        <TuningGuide drumType={selectedDrum} language={language} theme={theme} />\n        <RealFrequencyDetector\n          drumType={selectedDrum}\n          onFrequencyDetected={handleFrequencyDetected}\n          language={language}\n          theme={theme}\n        />\n        {detectedFreq && (\n          <>\n            <TuningResult\n              drumType={selectedDrum}\n              detectedFreq={detectedFreq}\n              language={language}\n              theme={theme}\n            />\n            <RealTimeGraph frequencies={frequencyHistory} theme={theme} />\n          </>\n        )}\n        <Credits language={language} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}